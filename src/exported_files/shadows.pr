import SwiftUI

// Generated by Supernova - do not modify manually
public extension View {
    {[ let brand = ds.currentBrand() /]}
    {[ for group in ds.tokenGroupsOfType("Shadow", brand.id) ]}
    {[ const tokens = ds.tokensByGroupId(group.id) /]}
    {[ if !(tokens.count() === 0 && group.subgroups.count() === 0) ]}
    {[ if !group.isRoot ]}

    // {{ group.name }}
    {[/]}
    {[ for token in tokens ]}

    {[ if (token.description && token.description.count() > 0) ]}
    {{ createDocumentationComment(token.description, "    ") }}
    {[/]}
    public func shadow{[ inject "token_func_name" context this /]}() -> some View {
        return self.shadow({[ inject "color" context token.value.color /]}, radius: {{ token.value.radius.measure }}, x: {{ token.value.x.measure }}, y: {{ token.value.y.measure }}) 
    }
    {[/]}
    {[/]}
    {[/]}
}