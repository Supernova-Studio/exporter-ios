import SwiftUI

// Generated by Supernova - do not modify manually

{[ let brand = ds.currentBrand() /]}
{[ for group in ds.tokenGroupsOfType("Shadow", brand.id) ]}
{[ const tokens = ds.tokensByGroupId(group.id) /]}
{[ if !(tokens.count() === 0 && group.subgroups.count() === 0) ]}
{[ if !group.isRoot ]}

// {{ group.name }}

{[/]}
{[ for token in tokens ]}

{[ if (token.description && token.description.count() > 0) ]}
{{ createDocumentationComment(token.description, "    ") }}

{[/]}
public struct Shadow{[ inject "token_func_name" context this /]}: ViewModifier {
    public init() {}

    public func body(content: Content) -> some View {
        return content.shadow(color: {[ inject "color" context token.value.color /]}, radius: {{ token.value.radius.measure }}, x: {{ token.value.x.measure }}, y: {{ token.value.y.measure }}) 
    }
}
{[/]}
{[/]}
{[/]}