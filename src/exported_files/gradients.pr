import SwiftUI

// Generated by Supernova - do not modify manually
public struct TokenGradient {
    
    {[ let brand = ds.currentBrand() /]}
    {[ for group in ds.tokenGroupsOfType("Gradient", brand.id) ]}
    {[ const tokens = ds.tokensByGroupId(group.id) /]}
    {[ if !(tokens.count() === 0 && group.subgroups.count() === 0) ]}
    {[ if !group.isRoot ]}

    // {{ group.name }}

    {[/]}
    {[ for token in tokens ]}

    {[ if (token.value.type == "Linear") ]}
    {[ if (token.description && token.description.count() > 0) ]}
    {{ createDocumentationComment(token.description, "        ") }}

    {[/]}
    public static let {[ inject "token_name" context this /]} = LinearGradient(
        gradient: Gradient(stops:Â [
            {[ for stop in token.value.stops ]}
            Gradient.Stop(color: {[ inject "color" context stop.color /]}, location: {{ stop.position }}),
            {[/]}
        ]),
        startPoint: UnitPoint(x: {{ token.value.from.x }}, y: {{ token.value.from.y }}),
        endPoint: UnitPoint(x: {{ token.value.to.x }}, y: {{ token.value.to.y }}) 
    )
    {[/]}
    {[/]}
    {[/]}
    {[/]}
}