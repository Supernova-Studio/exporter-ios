import UIKit

// Generated by Supernova - do not modify manually
extension UIColor {
    
    static let Token = UIColor.TokenColor()
    
    struct TokenColor {
        {[ let brand = ds.currentBrand() /]}
        {[ for group in ds.tokenGroupsOfType("Color", brand.id) ]}
        {[ if !(group.tokenIds.count() === 0 && group.subgroups.count() === 0) ]}
        {[ if !group.isRoot ]}

        // {{ group.name }}
        {[/]}
        {[ const tokens = ds.tokensByGroupId(group.id) /]}
        {[ if (group.tokenIds.count() !== 0 && (tokens.first() && tokens.first().description === 0)) ]}

        {[/]}
        {[ for token in tokens ]}
        {[ if (token.description && token.description.count() !== 0) ]}

        {{ createDocumentationComment(token.description, "        ") }}
        {[/]}
        let {[ inject "token_name" context this /]} = {[ inject "ui_color" context token.value /]} 
        {[/]}
        {[/]}
        {[/]}
    }
}